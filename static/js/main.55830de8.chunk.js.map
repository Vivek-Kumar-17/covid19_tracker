{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","colr","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.55830de8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3Bunm\",\"card\":\"Cards_card__1crDd\",\"infected\":\"Cards_infected__3J63d\",\"recovered\":\"Cards_recovered__3R2UW\",\"deaths\":\"Cards_deaths__3pqng\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ( { data: {confirmed, recovered, deaths, lastUpdate, }} ) => {\r\n    if(!confirmed){\r\n        return 'Loading...';\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp\r\n                                start={0}\r\n                                end={confirmed.value}\r\n                                duration={2.5}\r\n                                separator=\",\"\r\n                            />\r\n                        </Typography>\r\n                        <Typography colr=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography>Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp\r\n                            start={0}\r\n                            end={recovered.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                        />\r\n                        </Typography>\r\n                        <Typography colr=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography>Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                        <CountUp\r\n                            start={0}\r\n                            end={deaths.value}\r\n                            duration={2.5}\r\n                            separator=\",\"\r\n                        />\r\n                        </Typography>\r\n                        <Typography colr=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography>Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const { data : { confirmed, recovered, deaths, lastUpdate }} = await axios.get(changeableUrl);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries }} = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ( { data: {confirmed, recovered, deaths}, country} ) => {\r\n    const[dailyData, setDailyData] =useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI =async () => {\r\n             setDailyData(await fetchDailyData());\r\n        }\r\n\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n            ? (\r\n                <Line \r\n                data={{\r\n                    labels: dailyData.map(({ date })  => date),\r\n                    datasets: [{\r\n                        data: dailyData.map(({ confirmed }) => confirmed),\r\n                        label: 'Infected',\r\n                        borderColor: '#3333ff',\r\n                        fill: true,\r\n                    }, {\r\n                        data: dailyData.map(({ deaths }) => deaths),\r\n                        label: 'Deaths',\r\n                        borderColor: 'red',\r\n                        backgroundColor: 'rgba(255,0,0,0.5)',\r\n                        fill: true,\r\n                    }],\r\n                }}\r\n            /> ) : null\r\n    );\r\n     \r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar \r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: ['rgba(0,0,255,0.5)',\r\n                        'rgba(0,255,0,0.5)',\r\n                        'rgba(255,0,0,0.5)',\r\n                    ],\r\n                        data: [confirmed.value, recovered.value, deaths.value],\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: { display: false},\r\n                    title: {display:true, text: `Current state in ${country}`},\r\n                }}\r\n            />\r\n        ) : null\r\n    );        \r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n\r\n    }, [setFetchedCountries]);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => { handleCountryChange(e.target.value)}}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from \"./App.module.css\";\r\nimport { fetchData } from './api';\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount(){\r\n    const fetchedData = await fetchData();\r\n    this.setState({ data: fetchedData});\r\n  }\r\n\r\n  handleCountryChange = async (country) => { \r\n    const fetchedData = await fetchData(country);\r\n    this.setState({ data: fetchedData, country: country});\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state; \r\n    return (\r\n      <div className={styles.container}>\r\n      <img className={styles.image} src={coronaImage} alt='COVID-19'/>\r\n      <h3>Select Region</h3>\r\n      <CountryPicker  handleCountryChange={this.handleCountryChange}/>\r\n      <Cards data={data}/>\r\n      <Chart data={data} country={country}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1eKhR\",\"image\":\"App_image__2iLZ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__FQAT7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__30nJS\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}